{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curs-Scoala informala de IT\\\\week14_homework_Rick and Morty API-React - useContext\\\\src\\\\components\\\\Episodes\\\\EpisodesList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport Episode from \"../Episodes/Episode\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Pagination from \"../Pagination\";\nimport MobileEpisodesList from \"./MobileEpisodesList\";\nimport useHttp from \"../../hooks/use-http\";\nimport config from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EpisodesList = props => {\n  _s();\n\n  const [episodes, setEpisodes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState();\n  const setEpisodesData = useCallback(dataArr => {\n    setEpisodes(dataArr[\"results\"]);\n    setTotalPages(dataArr[\"info\"][\"pages\"]);\n  }, []);\n  const {\n    isLoading,\n    sendRequest: getEpisodes\n  } = useHttp(setEpisodesData);\n\n  const switchPage = pageNo => {\n    setCurrentPage(pageNo);\n  };\n\n  useEffect(() => {\n    getEpisodes({\n      link: config.api.episodesAPI,\n      errorMessage: \"Could not get Episodes!\",\n      urlParams: [{\n        property: \"page\",\n        value: currentPage,\n        required: true\n      }]\n    });\n  }, [currentPage, getEpisodes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"episodes-list\",\n        children: episodes.map(item => /*#__PURE__*/_jsxDEV(Episode, {\n          episode: item.episode,\n          name: item.name,\n          air_date: item.air_date,\n          charactersNo: item.characters.length,\n          setActiveEpisodeHandler: props.setActiveEpisodeHandler,\n          active: props.activeEpisode === episode.episode\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        totalPages: totalPages,\n        currentPage: currentPage,\n        switchPage: switchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(MobileEpisodesList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EpisodesList, \"mbCkju+/fb7qVXavzzuXuRMQqzU=\", false, function () {\n  return [useHttp];\n});\n\n_c = EpisodesList;\nexport default EpisodesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodesList\");","map":{"version":3,"names":["useState","useEffect","useCallback","Episode","LoadingSpinner","Pagination","MobileEpisodesList","useHttp","config","EpisodesList","props","episodes","setEpisodes","currentPage","setCurrentPage","totalPages","setTotalPages","setEpisodesData","dataArr","isLoading","sendRequest","getEpisodes","switchPage","pageNo","link","api","episodesAPI","errorMessage","urlParams","property","value","required","map","item","episode","name","air_date","characters","length","setActiveEpisodeHandler","activeEpisode","id"],"sources":["D:/Curs-Scoala informala de IT/week14_homework_Rick and Morty API-React - useContext/src/components/Episodes/EpisodesList.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport Episode from \"../Episodes/Episode\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport Pagination from \"../Pagination\";\r\nimport MobileEpisodesList from \"./MobileEpisodesList\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport config from \"../../config\";\r\n\r\nconst EpisodesList = (props) => {\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState();\r\n\r\n  const setEpisodesData = useCallback((dataArr) => {\r\n    setEpisodes(dataArr[\"results\"]);\r\n    setTotalPages(dataArr[\"info\"][\"pages\"]);\r\n  }, []);\r\n\r\n  const { isLoading, sendRequest: getEpisodes } = useHttp(setEpisodesData);\r\n\r\n  const switchPage = (pageNo) => {\r\n    setCurrentPage(pageNo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEpisodes({\r\n      link: config.api.episodesAPI,\r\n      errorMessage: \"Could not get Episodes!\",\r\n      urlParams: [{ property: \"page\", value: currentPage, required: true }],\r\n    });\r\n  }, [currentPage, getEpisodes]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner />}\r\n      {!isLoading && (\r\n        <>\r\n          <ul className=\"episodes-list\">\r\n            {episodes.map((item) => (\r\n              <Episode\r\n                key={item.id}\r\n                episode={item.episode}\r\n                name={item.name}\r\n                air_date={item.air_date}\r\n                charactersNo={item.characters.length}\r\n                setActiveEpisodeHandler={props.setActiveEpisodeHandler}\r\n                active={props.activeEpisode === episode.episode}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            currentPage={currentPage}\r\n            switchPage={switchPage}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {/* ------------- for Mobile  ------------ */}\r\n      <MobileEpisodesList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpisodesList;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,EAA5C;EAEA,MAAMiB,eAAe,GAAGf,WAAW,CAAEgB,OAAD,IAAa;IAC/CN,WAAW,CAACM,OAAO,CAAC,SAAD,CAAR,CAAX;IACAF,aAAa,CAACE,OAAO,CAAC,MAAD,CAAP,CAAgB,OAAhB,CAAD,CAAb;EACD,CAHkC,EAGhC,EAHgC,CAAnC;EAKA,MAAM;IAAEC,SAAF;IAAaC,WAAW,EAAEC;EAA1B,IAA0Cd,OAAO,CAACU,eAAD,CAAvD;;EAEA,MAAMK,UAAU,GAAIC,MAAD,IAAY;IAC7BT,cAAc,CAACS,MAAD,CAAd;EACD,CAFD;;EAIAtB,SAAS,CAAC,MAAM;IACdoB,WAAW,CAAC;MACVG,IAAI,EAAEhB,MAAM,CAACiB,GAAP,CAAWC,WADP;MAEVC,YAAY,EAAE,yBAFJ;MAGVC,SAAS,EAAE,CAAC;QAAEC,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAEjB,WAA3B;QAAwCkB,QAAQ,EAAE;MAAlD,CAAD;IAHD,CAAD,CAAX;EAKD,CANQ,EAMN,CAAClB,WAAD,EAAcQ,WAAd,CANM,CAAT;EAQA,oBACE;IAAA,WACGF,SAAS,iBAAI,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QADhB,EAEG,CAACA,SAAD,iBACC;MAAA,wBACE;QAAI,SAAS,EAAC,eAAd;QAAA,UACGR,QAAQ,CAACqB,GAAT,CAAcC,IAAD,iBACZ,QAAC,OAAD;UAEE,OAAO,EAAEA,IAAI,CAACC,OAFhB;UAGE,IAAI,EAAED,IAAI,CAACE,IAHb;UAIE,QAAQ,EAAEF,IAAI,CAACG,QAJjB;UAKE,YAAY,EAAEH,IAAI,CAACI,UAAL,CAAgBC,MALhC;UAME,uBAAuB,EAAE5B,KAAK,CAAC6B,uBANjC;UAOE,MAAM,EAAE7B,KAAK,CAAC8B,aAAN,KAAwBN,OAAO,CAACA;QAP1C,GACOD,IAAI,CAACQ,EADZ;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAcE,QAAC,UAAD;QACE,UAAU,EAAE1B,UADd;QAEE,WAAW,EAAEF,WAFf;QAGE,UAAU,EAAES;MAHd;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA,gBAHJ,eA0BE,QAAC,kBAAD;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA,gBADF;AA8BD,CAtDD;;GAAMb,Y;UAU4CF,O;;;KAV5CE,Y;AAwDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}