{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport config from \"../config\"; // requestConfig = {\n//   link,\n//   errorMessage,\n//   urlParams: [{property: \"episode\", value: \"S01E01\", required: true/false}]\n// };\n\nconst useHttp = applyData => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const prepareLink = newLink => {\n    return newLink.replace(config.api.baseURL, \"\");\n  };\n\n  const processURLParams = urlParams => {\n    let queryArr = [];\n\n    if (!urlParams) {\n      return \"\";\n    }\n\n    for (let param of urlParams) {\n      if (param.required && !param.value) {\n        throw new Error(`Value not defined for ${param.property}`);\n      }\n\n      queryArr.push(`${param.property}=${param.value}`);\n    }\n\n    return \"?\" + queryArr.join(\"&\");\n  };\n\n  const sendRequest = useCallback(requestConfig => {\n    try {\n      const url = config.api.baseURL + prepareLink(requestConfig.link) + processURLParams(requestConfig.urlParams); // setIsLoading(true);\n\n      fetch(url, {\n        method: \"GET\"\n      }).then(response => {\n        if (!response.ok) {\n          return Promise.reject(new Error(requestConfig.errorMessage));\n        }\n\n        return response.json();\n      }).then(data => {\n        applyData(data);\n        setIsLoading(false);\n      }).catch(error => {\n        console.log(error.message);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      setIsLoading(false);\n    }\n  }, [applyData]);\n  return {\n    isLoading,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"jm1mpWCyB1biTUgc9yotTfNwClE=\");\n\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","config","useHttp","applyData","isLoading","setIsLoading","prepareLink","newLink","replace","api","baseURL","processURLParams","urlParams","queryArr","param","required","value","Error","property","push","join","sendRequest","requestConfig","url","link","fetch","method","then","response","ok","Promise","reject","errorMessage","json","data","catch","error","console","log","message"],"sources":["D:/Curs-Scoala informala de IT/week14_homework_Rick and Morty API-React - useContext/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nimport config from \"../config\";\r\n\r\n// requestConfig = {\r\n//   link,\r\n//   errorMessage,\r\n//   urlParams: [{property: \"episode\", value: \"S01E01\", required: true/false}]\r\n// };\r\n\r\nconst useHttp = (applyData) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const prepareLink = (newLink) => {\r\n    return newLink.replace(config.api.baseURL, \"\");\r\n  };\r\n\r\n  const processURLParams = (urlParams) => {\r\n    let queryArr = [];\r\n    if (!urlParams) {\r\n      return \"\";\r\n    }\r\n    for (let param of urlParams) {\r\n      if (param.required && !param.value) {\r\n        throw new Error(`Value not defined for ${param.property}`);\r\n      }\r\n      queryArr.push(`${param.property}=${param.value}`);\r\n    }\r\n    return \"?\" + queryArr.join(\"&\");\r\n  };\r\n\r\n  const sendRequest = useCallback(\r\n    (requestConfig) => {\r\n      try {\r\n        const url =\r\n          config.api.baseURL +\r\n          prepareLink(requestConfig.link) +\r\n          processURLParams(requestConfig.urlParams);\r\n\r\n        // setIsLoading(true);\r\n\r\n        fetch(url, {\r\n          method: \"GET\",\r\n        })\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              return Promise.reject(new Error(requestConfig.errorMessage));\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            applyData(data);\r\n            setIsLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.message);\r\n            setIsLoading(false);\r\n          });\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [applyData]\r\n  );\r\n\r\n  return {\r\n    isLoading,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAIC,SAAD,IAAe;EAAA;;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;;EAEA,MAAMM,WAAW,GAAIC,OAAD,IAAa;IAC/B,OAAOA,OAAO,CAACC,OAAR,CAAgBP,MAAM,CAACQ,GAAP,CAAWC,OAA3B,EAAoC,EAApC,CAAP;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;IACtC,IAAIC,QAAQ,GAAG,EAAf;;IACA,IAAI,CAACD,SAAL,EAAgB;MACd,OAAO,EAAP;IACD;;IACD,KAAK,IAAIE,KAAT,IAAkBF,SAAlB,EAA6B;MAC3B,IAAIE,KAAK,CAACC,QAAN,IAAkB,CAACD,KAAK,CAACE,KAA7B,EAAoC;QAClC,MAAM,IAAIC,KAAJ,CAAW,yBAAwBH,KAAK,CAACI,QAAS,EAAlD,CAAN;MACD;;MACDL,QAAQ,CAACM,IAAT,CAAe,GAAEL,KAAK,CAACI,QAAS,IAAGJ,KAAK,CAACE,KAAM,EAA/C;IACD;;IACD,OAAO,MAAMH,QAAQ,CAACO,IAAT,CAAc,GAAd,CAAb;EACD,CAZD;;EAcA,MAAMC,WAAW,GAAGtB,WAAW,CAC5BuB,aAAD,IAAmB;IACjB,IAAI;MACF,MAAMC,GAAG,GACPtB,MAAM,CAACQ,GAAP,CAAWC,OAAX,GACAJ,WAAW,CAACgB,aAAa,CAACE,IAAf,CADX,GAEAb,gBAAgB,CAACW,aAAa,CAACV,SAAf,CAHlB,CADE,CAMF;;MAEAa,KAAK,CAACF,GAAD,EAAM;QACTG,MAAM,EAAE;MADC,CAAN,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;UAChB,OAAOC,OAAO,CAACC,MAAR,CAAe,IAAId,KAAJ,CAAUK,aAAa,CAACU,YAAxB,CAAf,CAAP;QACD;;QACD,OAAOJ,QAAQ,CAACK,IAAT,EAAP;MACD,CARH,EASGN,IATH,CASSO,IAAD,IAAU;QACd/B,SAAS,CAAC+B,IAAD,CAAT;QACA7B,YAAY,CAAC,KAAD,CAAZ;MACD,CAZH,EAaG8B,KAbH,CAaUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;QACAlC,YAAY,CAAC,KAAD,CAAZ;MACD,CAhBH;IAiBD,CAzBD,CAyBE,OAAO+B,KAAP,EAAc;MACd/B,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CA9B4B,EA+B7B,CAACF,SAAD,CA/B6B,CAA/B;EAkCA,OAAO;IACLC,SADK;IAELiB;EAFK,CAAP;AAID,CA3DD;;GAAMnB,O;;AA6DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}